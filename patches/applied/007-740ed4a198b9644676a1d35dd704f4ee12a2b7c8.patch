commit 740ed4a198b9644676a1d35dd704f4ee12a2b7c8
Author: Steve Wainstead <wainstead@gmail.com>
Date:   Sun Jun 7 19:41:29 2009 +0000

    This is a tough one for a C newbie. The change here:
    
    -	r.type |= TYPE_COMPLEX_FLAG;
    +	(int)r.type |= 128;
    
    changes a cast error into an lvalue warning, so we may continue compilation; but it needs revisiting because it can't be any good. Otherwise, in this commit, a few mymalloc() calls were not cast to (state *).
    
    	(int)r.type |= 128;

diff --git a/server/db_io.c b/server/db_io.c
index 13512af..cc7956c 100644
--- a/server/db_io.c
+++ b/server/db_io.c
@@ -222,7 +222,7 @@ dbio_read_var(void)
 	break;
     case _TYPE_STR:
 	r.v.str = dbio_read_string_intern();
-	r.type |= TYPE_COMPLEX_FLAG;
+	(int)r.type |= 128;
 	break;
     case TYPE_OBJ:
     case TYPE_ERR:
@@ -259,7 +259,7 @@ static const char *
 program_name(struct state *s)
 {
     if (!s->fmtr)
-	return s->data;
+      return (char *)s->data;
     else
 	return (*s->fmtr) (s->data);
 }
@@ -267,21 +267,21 @@ program_name(struct state *s)
 static void
 my_error(void *data, const char *msg)
 {
-    errlog("PARSER: Error in %s:\n", program_name(data));
+  errlog("PARSER: Error in %s:\n", program_name((state *)data));
     errlog("           %s\n", msg);
 }
 
 static void
 my_warning(void *data, const char *msg)
 {
-    oklog("PARSER: Warning in %s:\n", program_name(data));
+  oklog("PARSER: Warning in %s:\n", program_name((state *)data));
     oklog("           %s\n", msg);
 }
 
 static int
 my_getc(void *data)
 {
-    struct state *s = data;
+  struct state *s = (state *)data;
     int c;
 
     c = fgetc(input);
