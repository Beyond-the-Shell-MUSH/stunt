From 647d88070f065b5aac90ee4b98f7dc0e4819c4f8 Mon Sep 17 00:00:00 2001
From: Steve Wainstead <wainstead@gmail.com>
Date: Fri, 21 Jan 2011 20:18:16 +0000
Subject: [PATCH 102/223] I'm removing the hardcoded definition of the
 compiler:

CC = @CC@

and substituting $(CC) for $(CXX) throughout. What this does is cause
'make' to use the system default C++ compiler. I tried to use @CXX@
instead of removing the line above but it didn't work.
---
 server/Makefile.in |   12 ++++++------
 1 file changed, 6 insertions(+), 6 deletions(-)

diff --git a/server/Makefile.in b/server/Makefile.in
index 9f2e7ee..7fa49e5 100644
--- a/server/Makefile.in
+++ b/server/Makefile.in
@@ -22,7 +22,7 @@
 
 EXPAT_OBJS = -lexpat
 
-CC = @CC@ 
+
 LIBRARIES = @LIBS@ $(EXPAT_OBJS)
 YACC = @YACC@
 
@@ -36,7 +36,7 @@ CFLAGS = -O -DEXPAT_XML
 # CFLAGS = -O2 -Dinline=
 
 YFLAGS = -d
-COMPILE.c = $(CC) $(CFLAGS) $(CPPFLAGS) -c
+COMPILE.c = $(CXX) $(CFLAGS) $(CPPFLAGS) -c
 
 CSRCS = ast.c code_gen.c db_file.c db_io.c db_objects.c db_properties.c \
 	db_verbs.c decompile.c disassemble.c eval_env.c eval_vm.c \
@@ -91,17 +91,17 @@ YOBJS = $(YSRCS:.y=.o)
 OBJS = $(COBJS) $(YOBJS)
 
 moo:	$(OBJS)
-	$(CC) $(CFLAGS) $(OBJS) $(LIBRARIES) -o $@
+	$(CXX) $(CFLAGS) $(OBJS) $(LIBRARIES) -o $@
 
 # 'purify' is a memory leak checker, now IBM Rational Purify. --sw
 pure_moo: moo
-	purify $(CC) $(CFLAGS) $(OBJS) $(LIBRARIES) -o $@
+	purify $(CXX) $(CFLAGS) $(OBJS) $(LIBRARIES) -o $@
 
 client_bsd: client_bsd.o
-	$(CC) $(CFLAGS) client_bsd.o $(LIBRARIES) -o $@
+	$(CXX) $(CFLAGS) client_bsd.o $(LIBRARIES) -o $@
 
 client_sysv: client_sysv.o
-	$(CC) $(CFLAGS) client_sysv.o $(LIBRARIES) -o $@
+	$(CXX) $(CFLAGS) client_sysv.o $(LIBRARIES) -o $@
 
 # This rule gets around some "make"s' desire to `derive' it from `restart.sh'.
 restart:
-- 
1.7.9.5

