From c9db7759d9d267216ad8103b756d50541d3b5f3b Mon Sep 17 00:00:00 2001
From: Steve Wainstead <wainstead@gmail.com>
Date: Sat, 29 Jan 2011 03:58:17 +0000
Subject: [PATCH 117/223] Renamed task_queue to TaskQueue, as a start to
 making struct naming consistent... and removed the
 old CVS log entries from task.h.

---
 server/server.c |    2 +-
 server/tasks.c  |   16 ++++++------
 server/tasks.h  |   78 ++++++-------------------------------------------------
 3 files changed, 17 insertions(+), 79 deletions(-)

diff --git a/server/server.c b/server/server.c
index ab787e8..ba2d320 100644
--- a/server/server.c
+++ b/server/server.c
@@ -73,7 +73,7 @@ typedef struct shandle {
     time_t last_activity_time;
     Objid player;
     Objid listener;
-    task_queue tasks;
+    TaskQueue tasks;
     int disconnect_me;
     int outbound, binary;
     int print_messages;
diff --git a/server/tasks.c b/server/tasks.c
index 7a104e6..bf986a3 100644
--- a/server/tasks.c
+++ b/server/tasks.c
@@ -920,10 +920,10 @@ is_out_of_input(tqueue * tq)
  * Exported interface
  */
 
-task_queue
+TaskQueue
 new_task_queue(Objid player, Objid handler)
 {
-    task_queue result;
+    TaskQueue result;
     result.ptr = (tqueue *) find_tqueue(player, 1);
     tqueue *tq = (tqueue *) result.ptr;
 
@@ -934,7 +934,7 @@ new_task_queue(Objid player, Objid handler)
 }
 
 void
-free_task_queue(task_queue q)
+free_task_queue(TaskQueue q)
 {
     tqueue *tq = (tqueue *) q.ptr;
 
@@ -1007,7 +1007,7 @@ free_task_queue(task_queue q)
 				 */
 
 int
-tasks_set_connection_option(task_queue q, const char *option, Var value)
+tasks_set_connection_option(TaskQueue q, const char *option, Var value)
 {
     do {
 	if (!mystrcasecmp((option), "flush-command")) { {
@@ -1052,7 +1052,7 @@ tasks_set_connection_option(task_queue q, const char *option, Var value)
 }
 
 int
-tasks_connection_option(task_queue q, const char *option, Var * value)
+tasks_connection_option(TaskQueue q, const char *option, Var * value)
 {
     do {
 	if (!mystrcasecmp((option), "flush-command")) {
@@ -1085,7 +1085,7 @@ tasks_connection_option(task_queue q, const char *option, Var * value)
 }
 
 Var
-tasks_connection_options(task_queue q, Var list)
+tasks_connection_options(TaskQueue q, Var list)
 {
     do { {
 	    Var pair = new_list(2);
@@ -1187,7 +1187,7 @@ enqueue_input_task(tqueue * tq, const char *input, int at_front,
 }
 
 void
-task_suspend_input(task_queue q)
+task_suspend_input(TaskQueue q)
 {
     tqueue *tq = (tqueue *) q.ptr;
 
@@ -1221,7 +1221,7 @@ flush_input(tqueue * tq, int show_messages)
 }
 
 void
-new_input_task(task_queue q, const char *input, int binary)
+new_input_task(TaskQueue q, const char *input, int binary)
 {
     tqueue *tq = (tqueue *) q.ptr;
 
diff --git a/server/tasks.h b/server/tasks.h
index 83fbb72..f517c75 100644
--- a/server/tasks.h
+++ b/server/tasks.h
@@ -28,17 +28,17 @@
 // possibly the pointer will only ever point to a tqueue, but would have to trace it
 typedef struct {
     void *ptr;
-} task_queue;
+} TaskQueue;
 
-extern task_queue new_task_queue(Objid player, Objid handler);
-extern void free_task_queue(task_queue q);
+extern TaskQueue new_task_queue(Objid player, Objid handler);
+extern void free_task_queue(TaskQueue q);
 
-extern int tasks_connection_option(task_queue, const char *, Var *);
-extern Var tasks_connection_options(task_queue, Var);
-extern int tasks_set_connection_option(task_queue, const char *, Var);
+extern int tasks_connection_option(TaskQueue, const char *, Var *);
+extern Var tasks_connection_options(TaskQueue, Var);
+extern int tasks_set_connection_option(TaskQueue, const char *, Var);
 
-extern void new_input_task(task_queue, const char *, int);
-extern void task_suspend_input(task_queue);
+extern void new_input_task(TaskQueue, const char *, int);
+extern void task_suspend_input(TaskQueue);
 extern enum error enqueue_forked_task2(activation a, int f_index,
 				       unsigned after_seconds, int vid);
 extern enum error enqueue_suspended_task(vm the_vm, void *data);
@@ -111,65 +111,3 @@ extern db_verb_handle find_verb_for_programming(Objid player,
 
 #endif				/* !Tasks_H */
 
-/* 
- * $Log: not supported by cvs2svn $
- * Revision 1.4  2003/06/12 18:16:57  bjj
- * Suspend input on connection until :do_login_command() can run.
- *
- * Revision 1.3.10.1  2003/06/11 10:40:17  wrog
- * added binary argument to new_input_task()
- *
- * Revision 1.3  1998/12/14 13:19:08  nop
- * Merge UNSAFE_OPTS (ref fixups); fix Log tag placement to fit CVS whims
- *
- * Revision 1.2.2.1  1998/12/06 07:13:23  bjj
- * Rationalize enqueue_forked_task interface and fix program_ref leak in
- * the case where fork fails with E_QUOTA.  Make .queued_task_limit=0 really
- * enforce a limit of zero tasks (for old behavior set it to 1, that's the
- * effect it used to have).
- *
- * Revision 1.2  1997/03/03 04:19:32  nop
- * GNU Indent normalization
- *
- * Revision 1.1.1.1  1997/03/03 03:45:04  nop
- * LambdaMOO 1.8.0p5
- *
- * Revision 2.5  1996/03/19  07:10:22  pavel
- * Added run_server_program_task() for use from emergency mode.
- * Release 1.8.0p2.
- *
- * Revision 2.4  1996/03/10  01:14:59  pavel
- * Added support for `connection_option()'.  Release 1.8.0.
- *
- * Revision 2.3  1996/02/08  06:10:19  pavel
- * Added support for tasks-module connection options, displacing
- * set_input_task_holding().  Renamed enqueue_input_task() to
- * new_input_task().  Updated copyright notice for 1996.  Release 1.8.0beta1.
- *
- * Revision 2.2  1995/12/31  03:20:51  pavel
- * Added handler argument to new_task_queue(), to support multiple listening
- * points.  Release 1.8.0alpha4.
- *
- * Revision 2.1  1995/12/11  08:00:58  pavel
- * Removed another silly use of `unsigned'.  Added `find_suspended_task()'.
- * Release 1.8.0alpha2.
- *
- * Revision 2.0  1995/11/30  04:56:05  pavel
- * New baseline version, corresponding to release 1.8.0alpha1.
- *
- * Revision 1.5  1992/10/23  23:03:47  pavel
- * Added copyright notice.
- *
- * Revision 1.4  1992/10/21  03:02:35  pavel
- * Converted to use new automatic configuration system.
- *
- * Revision 1.3  1992/09/08  21:56:27  pjames
- * Removed some procedures which are no longer external.
- *
- * Revision 1.2  1992/08/10  16:48:00  pjames
- * Changed Parse_Info to activation in enqueue_forked_task argument list,
- * because all important information is now stored in activation.
- *
- * Revision 1.1  1992/07/20  23:23:12  pavel
- * Initial RCS-controlled version.
- */
-- 
1.7.9.5

