# Copyright (c) 1992, 1995, 1996 Xerox Corporation.  All rights reserved.
# Portions of this code were written by Stephen White, aka ghond.
# Use and copying of this software and preparation of derivative works based
# upon this software are permitted.  Any distribution of this software or
# derivative works must comply with all applicable United States export
# control laws.  This software is made available AS IS, and Xerox Corporation
# makes no warranty about the software, its performance or its conformity to
# any specification.

# @configure_input@

CC	= @CXX@
DEFS	= @DEFS@
LIBS	= @LIBS@
YACC	= @YACC@

# for debugging you might prefer:
# CFLAGS='-g -m32 -O0 -Wall'

CFLAGS		= -m32 -O
CPPFLAGS	= @CPPFLAGS@
INSTALL         = @INSTALL@
INSTALL_DATA	= @INSTALL_DATA@

YFLAGS = -d
COMPILE.c = $(CC) $(CFLAGS) $(DEFS) $(CPPFLAGS) -c

CSRCS = ast.c base64.c code_gen.c collection.c db_file.c db_io.c	\
	    db_objects.c db_properties.c db_verbs.c decompile.c		\
	    disassemble.c eval_env.c eval_vm.c exceptions.c exec.c	\
	    execute.c extension-fileio.c extensions.c functions.c	\
	    hmac_sha2.c http_parser.c json.c keywords.c list.c log.c	\
	    map.c match.c md5.c name_lookup.c network.c net_mplex.c	\
	   net_proto.c numbers.c objects.c parse_cmd.c pattern.c	\
	   program.c property.c quota.c regexpr.c server.c sha1.c	\
	   sha256.c storage.c streams.c str_intern.c sym_table.c	\
	   tasks.c timers.c unparse.c utils.c verbs.c version.c		\
	   yajl.c yajl_alloc.c yajl_buf.c yajl_encode.c yajl_gen.c	\
	   yajl_lex.c yajl_parser.c yajl_version.c

OPT_NET_SRCS = net_single.c net_multi.c net_mp_selct.c net_mp_poll.c	\
	net_mp_fake.c net_tcp.c net_bsd_tcp.c net_bsd_lcl.c		\
	net_sysv_tcp.c net_sysv_lcl.c

OPT_NET_OBJS = $(OPT_NET_SRCS:.c=.o)

# removed gnu-malloc.c from the line below, must consolidate
OPT_CSRCS = $(OPT_NET_SRCS)

YSRCS = parser.y

HDRS = ast.h base64.h bf_register.h code_gen.h collection.h db.h	\
	  db_io.h db_private.h decompile.h db_tune.h disassemble.h	\
	  eval_env.h eval_vm.h exceptions.h execute.h exec.h		\
	  extension-fileio.h functions.h getpagesize.h hmac_sha2.h	\
	  http_parser.h keywords.h json.h list.h log.h map.h match.h	\
	 md5.h name_lookup.h network.h net_mplex.h net_multi.h		\
	 net_proto.h numbers.h opcode.h options.h parse_cmd.h		\
	 parser.h pattern.h program.h quota.h random.h regexpr.h	\
	 server.h sha1.h sha256.h storage.h streams.h structures.h	\
	 str_intern.h sym_table.h tasks.h timers.h tokens.h unparse.h	\
	 utils.h verbs.h version.h yajl_alloc.h yajl_buf.h		\
	 yajl_bytestack.h yajl_common.h yajl_encode.h yajl_gen.h	\
	 yajl_lex.h yajl_parse.h yajl_parser.h yajl_version.h


SYSHDRS = my-ctype.h my-fcntl.h my-in.h my-inet.h my-ioctl.h		\
	my-math.h my-poll.h my-signal.h my-socket.h my-stat.h		\
	my-stdarg.h my-stdio.h my-stdlib.h my-string.h my-stropts.h	\
	my-sys-time.h my-time.h my-tiuser.h my-types.h my-unistd.h	\
	my-wait.h

CLIENT_SRCS = client_bsd.c client_sysv.c

ALL_CSRCS = $(CSRCS) $(OPT_CSRCS) $(CLIENT_SRCS)

SRCS = $(ALL_CSRCS) keywords.gperf $(YSRCS) $(HDRS) $(SYSHDRS)

COBJS = $(CSRCS:.c=.o)

YOBJS = $(YSRCS:.y=.o)

OBJS = $(COBJS) $(YOBJS)

moo:	$(OBJS)
	$(CC) $(CFLAGS) $(DEFS) $(OBJS) $(LIBS) -o $@

# 'purify' is a memory leak checker, now IBM Rational Purify. --sw
pure_moo: moo
	purify $(CC) $(CFLAGS) $(DEFS) $(OBJS) $(LIBS) -o $@

client_bsd: client_bsd.o
	$(CC) $(CFLAGS) $(DEFS) client_bsd.o $(LIBS) -o $@

client_sysv: client_sysv.o
	$(CC) $(CFLAGS) $(DEFS) client_sysv.o $(LIBS) -o $@

configure: configure.ac
	@echo "Not running autoconf; you must do this by hand."
	touch configure

config.status: configure
	env CC= YACC= ./configure --no-create

Makefile: Makefile.in config.status
	@echo "[ $@ : $? ]"
	./config.status

config.h: config.h.in config.status
	@echo "[ $@ : $? ]"
	./config.status

y.tab.h: parser.o
	touch y.tab.h

# The LambdaMOO server project originally shipped with a lightly
# hacked version 2.1 of GNU gperf, renamed 'pgperf'; Pavel Curtis
# added a new command line option, '-l', to make the generated hash
# table case-insensitive. In 2002, the option '--ignore-case' was
# added to GNU gperf, and by 2011 the 'pgperf' shipped with LambdaMOO
# no longer compiled due to obsolesence (it used varargs.h, which is
# no longer supported). Also, the '-a' command line flag was replaced
# by '--language' and the flag '-p' was dropped (and no explanation
# given in gperf's ChangeLog). I've expanded the short options into
# long options here for readability. For the sake of history, this was
# the original incantation:
# pgperf -aCIptT -k1,3,$$ keywords.gperf
# --sw July 2011
keywords.c: keywords.gperf
	gperf --language=C++ --ignore-case --readonly-tables --struct-type \
		--omit-struct-type --key-positions=1,3,$$ keywords.gperf   \
		| sed -e 's/#include <ctype.h>/#include "my-ctype.h"/'     \
		> keywords.c

TAGS:
	etags $(SRCS)

clean:
	rm -f $(OBJS) $(OPT_NET_OBJS) core parser.c y.tab.c y.tab.h y.output makedep eddep

distclean:	clean
	rm -f config.h Makefile config.status config.log config.cache


depend: ${ALL_CSRCS}
# remove the temporary files made by this target
	rm -f eddep makedep
# generate parser.c and y.tab.h files, which are usually deleted after
# compilation
	bison -y -d parser.y
	mv -f y.tab.c parser.c
# use gcc to figure out all dependencies in the source files
	gcc -MM ${CFLAGS} ${ALL_CSRCS} | sed -e '/:$$/d' > makedep
	echo '/^# DO NOT DELETE THIS LINE/+1,$$d' >eddep
# add the line you see in this Makefile below
	echo '$$r makedep' >>eddep
	echo 'w' >>eddep
	cp Makefile.in Makefile.in.bak
# use the line editor "ex" to transform Makefile.in
	ex - Makefile.in < eddep
	rm -f eddep makedep # remove the temporary files
	rm -f parser.c y.tab.h # clean up parser files

all: moo

.PHONY: all clean distclean TAGS depend pure_moo


# Have to do this one manually, since make depend cannot hack yacc files.
parser.o:	my-ctype.h my-math.h my-stdlib.h my-string.h \
		ast.h code_gen.h config.h functions.h \
		keywords.h list.h log.h numbers.h opcode.h parser.h program.h \
		storage.h streams.h structures.h sym_table.h utils.h version.h

# Must do these specially, since they depend upon C preprocessor options.
network.o: 	net_single.o net_multi.o
net_proto.o:	net_bsd_tcp.o net_bsd_lcl.o net_sysv_tcp.o net_sysv_lcl.o
net_mplex.o:	net_mp_selct.o net_mp_poll.o net_mp_fake.o

$(OPT_NET_OBJS):
	touch $@

# DO NOT DELETE THIS LINE -- 'make depend' replaces everything below it.
ast.o: ast.c my-string.h config.h ast.h parser.h program.h structures.h \
  my-stdio.h version.h sym_table.h list.h streams.h exceptions.h log.h \
  storage.h utils.h execute.h db.h opcode.h options.h parse_cmd.h
base64.o: base64.c base64.h exceptions.h config.h functions.h my-stdio.h \
  execute.h db.h program.h structures.h version.h opcode.h options.h \
  parse_cmd.h storage.h my-string.h streams.h utils.h server.h network.h
code_gen.o: code_gen.c ast.h config.h parser.h program.h structures.h \
  my-stdio.h version.h sym_table.h exceptions.h opcode.h options.h \
  storage.h my-string.h str_intern.h utils.h execute.h db.h parse_cmd.h \
  streams.h my-stdlib.h
collection.o: collection.c bf_register.h collection.h structures.h \
  my-stdio.h config.h functions.h execute.h db.h program.h version.h \
  opcode.h options.h parse_cmd.h list.h streams.h exceptions.h map.h \
  utils.h
db_file.o: db_file.c my-stat.h config.h my-unistd.h my-stdio.h \
  my-stdlib.h collection.h structures.h db.h program.h version.h db_io.h \
  db_private.h exceptions.h list.h streams.h log.h options.h server.h \
  network.h storage.h my-string.h str_intern.h tasks.h execute.h opcode.h \
  parse_cmd.h timers.h my-time.h utils.h
db_io.o: db_io.c my-ctype.h config.h my-stdarg.h my-stdio.h my-stdlib.h \
  db_io.h program.h structures.h version.h db_private.h exceptions.h \
  list.h streams.h log.h map.h numbers.h parser.h storage.h my-string.h \
  str_intern.h unparse.h
db_objects.o: db_objects.c my-string.h config.h db.h program.h \
  structures.h my-stdio.h version.h db_private.h exceptions.h list.h \
  streams.h storage.h utils.h execute.h opcode.h options.h parse_cmd.h \
  xtrapbits.h
db_properties.o: db_properties.c collection.h structures.h my-stdio.h \
  config.h db.h program.h version.h db_private.h exceptions.h list.h \
  streams.h storage.h my-string.h utils.h execute.h opcode.h options.h \
  parse_cmd.h
db_verbs.o: db_verbs.c my-stdlib.h config.h my-string.h db.h program.h \
  structures.h my-stdio.h version.h db_private.h exceptions.h db_tune.h \
  list.h streams.h log.h parse_cmd.h storage.h utils.h execute.h opcode.h \
  options.h
decompile.o: decompile.c ast.h config.h parser.h program.h structures.h \
  my-stdio.h version.h sym_table.h decompile.h exceptions.h opcode.h \
  options.h storage.h my-string.h utils.h execute.h db.h parse_cmd.h \
  streams.h
disassemble.o: disassemble.c my-stdio.h config.h bf_register.h db.h \
  program.h structures.h version.h functions.h execute.h opcode.h \
  options.h parse_cmd.h list.h streams.h exceptions.h storage.h \
  my-string.h unparse.h utils.h verbs.h
eval_env.o: eval_env.c config.h eval_env.h structures.h my-stdio.h \
  version.h storage.h my-string.h sym_table.h utils.h execute.h db.h \
  program.h opcode.h options.h parse_cmd.h streams.h exceptions.h
eval_vm.o: eval_vm.c config.h db_io.h program.h structures.h my-stdio.h \
  version.h decompile.h ast.h parser.h sym_table.h eval_vm.h execute.h \
  db.h opcode.h options.h parse_cmd.h log.h map.h storage.h my-string.h \
  tasks.h utils.h streams.h exceptions.h
exceptions.o: exceptions.c exceptions.h config.h
exec.o: exec.c my-fcntl.h config.h my-signal.h my-stdlib.h my-string.h \
  my-unistd.h net_multi.h exec.h functions.h my-stdio.h execute.h db.h \
  program.h structures.h version.h opcode.h options.h parse_cmd.h list.h \
  streams.h exceptions.h log.h storage.h tasks.h utils.h
execute.o: execute.c my-string.h config.h collection.h structures.h \
  my-stdio.h db.h program.h version.h db_io.h decompile.h ast.h parser.h \
  sym_table.h eval_env.h eval_vm.h execute.h opcode.h options.h \
  parse_cmd.h exceptions.h functions.h list.h streams.h log.h map.h \
  numbers.h server.h network.h storage.h tasks.h timers.h my-time.h \
  utils.h
extension-fileio.o: extension-fileio.c my-stat.h config.h my-unistd.h \
  my-ctype.h my-string.h structures.h my-stdio.h exceptions.h \
  bf_register.h functions.h execute.h db.h program.h version.h opcode.h \
  options.h parse_cmd.h list.h streams.h storage.h utils.h server.h \
  network.h tasks.h log.h extension-fileio.h
extensions.o: extensions.c bf_register.h functions.h my-stdio.h config.h \
  execute.h db.h program.h structures.h version.h opcode.h options.h \
  parse_cmd.h db_tune.h utils.h streams.h exceptions.h
functions.o: functions.c my-stdarg.h config.h bf_register.h db_io.h \
  program.h structures.h my-stdio.h version.h functions.h execute.h db.h \
  opcode.h options.h parse_cmd.h list.h streams.h exceptions.h log.h \
  map.h server.h network.h storage.h my-string.h unparse.h utils.h
hmac_sha2.o: hmac_sha2.c hmac_sha2.h sha256.h
http_parser.o: http_parser.c http_parser.h
json.o: json.c my-string.h config.h my-stdlib.h exceptions.h functions.h \
  my-stdio.h execute.h db.h program.h structures.h version.h opcode.h \
  options.h parse_cmd.h json.h list.h streams.h map.h numbers.h storage.h \
  unparse.h utils.h yajl_parse.h yajl_common.h yajl_gen.h
keywords.o: keywords.c my-ctype.h config.h my-string.h keywords.h \
  structures.h my-stdio.h version.h tokens.h ast.h parser.h program.h \
  sym_table.h y.tab.h utils.h execute.h db.h opcode.h options.h \
  parse_cmd.h streams.h exceptions.h
list.o: list.c my-ctype.h config.h my-string.h bf_register.h collection.h \
  structures.h my-stdio.h exceptions.h functions.h execute.h db.h \
  program.h version.h opcode.h options.h parse_cmd.h hmac_sha2.h sha256.h \
  list.h streams.h log.h map.h md5.h pattern.h random.h sha1.h storage.h \
  unparse.h utils.h server.h network.h
log.o: log.c my-stdarg.h config.h my-stdio.h my-string.h my-time.h \
  bf_register.h functions.h execute.h db.h program.h structures.h \
  version.h opcode.h options.h parse_cmd.h log.h storage.h streams.h \
  exceptions.h utils.h
map.o: map.c my-string.h config.h functions.h my-stdio.h execute.h db.h \
  program.h structures.h version.h opcode.h options.h parse_cmd.h list.h \
  streams.h exceptions.h log.h map.h server.h network.h storage.h utils.h
match.o: match.c my-stdlib.h config.h my-string.h db.h program.h \
  structures.h my-stdio.h version.h exceptions.h match.h parse_cmd.h \
  storage.h unparse.h utils.h execute.h opcode.h options.h streams.h
md5.o: md5.c md5.h
name_lookup.o: name_lookup.c options.h config.h my-signal.h my-stdlib.h \
  my-unistd.h my-inet.h my-in.h my-types.h my-socket.h my-wait.h \
  my-string.h log.h my-stdio.h structures.h server.h network.h db.h \
  program.h version.h storage.h timers.h my-time.h
network.o: network.c options.h config.h net_multi.c my-ctype.h my-fcntl.h \
  my-ioctl.h my-signal.h my-stdio.h my-stdlib.h my-string.h my-unistd.h \
  exceptions.h list.h structures.h streams.h log.h net_mplex.h \
  net_multi.h net_proto.h network.h server.h db.h program.h version.h \
  storage.h timers.h my-time.h utils.h execute.h opcode.h parse_cmd.h
net_mplex.o: net_mplex.c options.h config.h net_mp_selct.c my-string.h \
  my-sys-time.h my-types.h log.h my-stdio.h structures.h net_mplex.h
net_proto.o: net_proto.c options.h config.h net_bsd_tcp.c my-inet.h \
  my-in.h my-types.h my-socket.h my-stdlib.h my-string.h my-unistd.h \
  list.h structures.h my-stdio.h streams.h exceptions.h log.h \
  name_lookup.h net_proto.h server.h network.h db.h program.h version.h \
  timers.h my-time.h utils.h execute.h opcode.h parse_cmd.h net_tcp.c
numbers.o: numbers.c my-math.h my-stdlib.h config.h my-string.h my-time.h \
  functions.h my-stdio.h execute.h db.h program.h structures.h version.h \
  opcode.h options.h parse_cmd.h log.h random.h storage.h utils.h \
  streams.h exceptions.h
objects.o: objects.c collection.h structures.h my-stdio.h config.h db.h \
  program.h version.h db_io.h exceptions.h execute.h opcode.h options.h \
  parse_cmd.h functions.h list.h streams.h numbers.h quota.h server.h \
  network.h storage.h my-string.h utils.h
parse_cmd.o: parse_cmd.c my-ctype.h config.h my-stdio.h my-stdlib.h \
  my-string.h my-time.h db.h program.h structures.h version.h list.h \
  streams.h exceptions.h match.h parse_cmd.h storage.h utils.h execute.h \
  opcode.h options.h
pattern.o: pattern.c my-ctype.h config.h my-stdlib.h my-string.h \
  pattern.h regexpr.h storage.h structures.h my-stdio.h streams.h \
  exceptions.h
program.o: program.c ast.h config.h parser.h program.h structures.h \
  my-stdio.h version.h sym_table.h exceptions.h list.h streams.h \
  storage.h my-string.h utils.h execute.h db.h opcode.h options.h \
  parse_cmd.h
property.o: property.c db.h config.h program.h structures.h my-stdio.h \
  version.h functions.h execute.h opcode.h options.h parse_cmd.h list.h \
  streams.h exceptions.h storage.h my-string.h utils.h
quota.o: quota.c config.h db.h program.h structures.h my-stdio.h \
  version.h quota.h
regexpr.o: regexpr.c my-stdio.h config.h regexpr.h my-stdlib.h \
  my-string.h
server.o: server.c my-types.h config.h my-signal.h my-stdarg.h my-stdio.h \
  my-stdlib.h my-string.h my-unistd.h my-wait.h db.h program.h \
  structures.h version.h db_io.h disassemble.h exec.h execute.h opcode.h \
  options.h parse_cmd.h functions.h list.h streams.h exceptions.h log.h \
  network.h server.h parser.h random.h storage.h tasks.h timers.h \
  my-time.h unparse.h utils.h
sha1.o: sha1.c sha1.h
sha256.o: sha256.c sha256.h
storage.o: storage.c my-stdlib.h config.h exceptions.h list.h \
  structures.h my-stdio.h streams.h options.h storage.h my-string.h \
  utils.h execute.h db.h program.h version.h opcode.h parse_cmd.h
streams.o: streams.c my-stdarg.h config.h my-string.h my-stdio.h log.h \
  structures.h storage.h streams.h exceptions.h
str_intern.o: str_intern.c my-stdlib.h config.h log.h my-stdio.h \
  structures.h storage.h my-string.h str_intern.h utils.h execute.h db.h \
  program.h version.h opcode.h options.h parse_cmd.h streams.h \
  exceptions.h
sym_table.o: sym_table.c my-stdio.h config.h ast.h parser.h program.h \
  structures.h version.h sym_table.h exceptions.h log.h storage.h \
  my-string.h utils.h execute.h db.h opcode.h options.h parse_cmd.h \
  streams.h
tasks.o: tasks.c my-string.h config.h my-time.h db.h program.h \
  structures.h my-stdio.h version.h db_io.h decompile.h ast.h parser.h \
  sym_table.h eval_env.h eval_vm.h execute.h opcode.h options.h \
  parse_cmd.h exceptions.h functions.h http_parser.h list.h streams.h \
  log.h map.h match.h random.h server.h network.h storage.h tasks.h \
  utils.h verbs.h
timers.o: timers.c my-signal.h config.h my-stdlib.h my-sys-time.h \
  options.h my-types.h my-time.h my-unistd.h timers.h
unparse.o: unparse.c my-ctype.h config.h my-stdio.h ast.h parser.h \
  program.h structures.h version.h sym_table.h decompile.h exceptions.h \
  functions.h execute.h db.h opcode.h options.h parse_cmd.h keywords.h \
  list.h streams.h log.h unparse.h storage.h my-string.h utils.h
utils.o: utils.c my-ctype.h config.h my-stdio.h my-string.h db.h \
  program.h structures.h version.h db_io.h exceptions.h list.h streams.h \
  log.h map.h match.h numbers.h server.h network.h options.h storage.h \
  utils.h execute.h opcode.h parse_cmd.h
verbs.o: verbs.c my-string.h config.h db.h program.h structures.h \
  my-stdio.h version.h exceptions.h execute.h opcode.h options.h \
  parse_cmd.h functions.h list.h streams.h log.h match.h parser.h \
  server.h network.h storage.h unparse.h utils.h verbs.h
version.o: version.c config.h version.h structures.h my-stdio.h list.h \
  streams.h exceptions.h storage.h my-string.h utils.h execute.h db.h \
  program.h opcode.h options.h parse_cmd.h version_src.h \
  version_options.h
yajl.o: yajl.c yajl_lex.h yajl_common.h yajl_parse.h yajl_parser.h \
  yajl_bytestack.h yajl_buf.h yajl_alloc.h
yajl_alloc.o: yajl_alloc.c yajl_alloc.h yajl_common.h
yajl_buf.o: yajl_buf.c yajl_buf.h yajl_alloc.h yajl_common.h
yajl_encode.o: yajl_encode.c yajl_encode.h yajl_buf.h yajl_alloc.h \
  yajl_common.h yajl_gen.h
yajl_gen.o: yajl_gen.c yajl_buf.h yajl_alloc.h yajl_common.h \
  yajl_encode.h yajl_gen.h
yajl_lex.o: yajl_lex.c yajl_lex.h yajl_common.h yajl_buf.h yajl_alloc.h
yajl_parser.o: yajl_parser.c yajl_lex.h yajl_common.h yajl_parser.h \
  yajl_bytestack.h yajl_buf.h yajl_alloc.h yajl_parse.h yajl_encode.h \
  yajl_gen.h
yajl_version.o: yajl_version.c yajl_version.h yajl_common.h
net_single.o: net_single.c my-ctype.h config.h my-fcntl.h my-stdio.h \
  my-unistd.h log.h structures.h network.h options.h server.h db.h \
  program.h version.h streams.h exceptions.h utils.h execute.h opcode.h \
  parse_cmd.h
net_multi.o: net_multi.c my-ctype.h config.h my-fcntl.h my-ioctl.h \
  my-signal.h my-stdio.h my-stdlib.h my-string.h my-unistd.h exceptions.h \
  list.h structures.h streams.h log.h net_mplex.h net_multi.h net_proto.h \
  options.h network.h server.h db.h program.h version.h storage.h \
  timers.h my-time.h utils.h execute.h opcode.h parse_cmd.h
net_mp_selct.o: net_mp_selct.c my-string.h config.h my-sys-time.h \
  options.h my-types.h log.h my-stdio.h structures.h net_mplex.h
net_mp_poll.o: net_mp_poll.c my-poll.h config.h log.h my-stdio.h \
  structures.h net_mplex.h storage.h my-string.h
net_tcp.o: net_tcp.c
net_bsd_tcp.o: net_bsd_tcp.c my-inet.h config.h my-in.h my-types.h \
  my-socket.h my-stdlib.h my-string.h my-unistd.h list.h structures.h \
  my-stdio.h streams.h exceptions.h log.h name_lookup.h net_proto.h \
  options.h server.h network.h db.h program.h version.h timers.h \
  my-time.h utils.h execute.h opcode.h parse_cmd.h net_tcp.c
net_bsd_lcl.o: net_bsd_lcl.c my-socket.h config.h my-stdio.h my-string.h \
  my-unistd.h log.h structures.h net_proto.h options.h storage.h utils.h \
  execute.h db.h program.h version.h opcode.h parse_cmd.h streams.h \
  exceptions.h
net_sysv_tcp.o: net_sysv_tcp.c my-inet.h config.h my-fcntl.h my-in.h \
  my-types.h my-ioctl.h my-socket.h my-stdlib.h my-string.h my-stropts.h \
  my-tiuser.h my-unistd.h log.h my-stdio.h structures.h name_lookup.h \
  net_proto.h options.h server.h network.h db.h program.h version.h \
  streams.h exceptions.h timers.h my-time.h net_tcp.c
net_sysv_lcl.o: net_sysv_lcl.c my-fcntl.h config.h my-stat.h my-stdio.h \
  my-stdlib.h my-unistd.h exceptions.h list.h structures.h streams.h \
  log.h net_multi.h net_proto.h options.h storage.h my-string.h utils.h \
  execute.h db.h program.h version.h opcode.h parse_cmd.h
client_bsd.o: client_bsd.c my-socket.h config.h my-stdio.h my-stdlib.h \
  my-string.h my-sys-time.h options.h my-types.h my-unistd.h
client_sysv.o: client_sysv.c my-fcntl.h config.h my-signal.h my-stdio.h \
  my-stdlib.h my-string.h my-types.h my-stat.h my-unistd.h options.h
